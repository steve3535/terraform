###################### SATELLITE ENROLLMENT

- hosts: all 
  gather_facts: no
  become: true
  # vars_files:
  # - "{{ lookup('env','ANSIBLE_VAULT') }}/satellite_creds.yml"
  pre_tasks:
  - name: wait some time for the host to be ready before staring anything else
    pause:
            minutes: 1
  - name: download Satellite CA 
    command: rpm -ivh http://lu712.lalux.local/pub/katello-ca-consumer-latest.noarch.rpm 
  tasks:
  - name: enroll a client
    community.general.redhat_subscription:
            server_hostname: lu712.lalux.local
            server_insecure: yes            
            state: present
            activationkey: "{{ env }}_standard1"
            org_id: "LALUX"
            force_register: yes

  - name: Install additional packages
    yum:
          name:
          - katello-agent
          - insights-client
          - telnet
          - p7zip
          - htop
          
          state: present
  
  - name: Run OS Updates ...
    yum:
          name: '*'
          state: latest

  - name: reboot
    reboot:
            post_reboot_delay: 5
  - name: Wait for server to come back
    wait_for_connection:
            timeout: 60

  - name: Create LV and FS for the application
    block:
    - name: create app_vg
      lvg:
              vg: app_vg
              pvs: /dev/sdb

    - name: create app_lv
      lvol:
              vg: app_vg
              lv: opt
              size: 90%FREE

    - name: create app xfs
      filesystem:
              fstype: xfs
              dev: /dev/mapper/app_vg-opt

    - name: mount in fstab
      mount:
              path: /opt
              src: /dev/mapper/app_vg-opt
              fstype: xfs
              state: mounted

  environment:
      no_proxy: lu711.lalux.local,lu712.lalux.local,172.22.56.11,172.22.56.10,lu714.linux.lalux.local,192.168.42.93

################# IDM 

- hosts: all
  become: true
  vars_files:  "{{ lookup('env','ANSIBLE_VAULT') }}/idm_creds.yml"
  vars:
        HOME_DIR: "{{ lookup('env','HOME') }}"
        USER: "{{ lookup('env','USER') }}"
        nd_exp_pkg: "/opt/infrastructure/linux/files/node_exporter-1.3.1.linux-amd64.tar.gz"
        nd_svc_file: "/opt/infrastructure/linux/files/node-exporter.service"

  gather_facts: yes

  roles:
  - role: ipaclient
    ipaadmin_principal: admin
    ipaadmin_password: "{{ idm_password }}"
    ipaclient_domain: linux.lalux.local
    ipaclient_hostname: "{{ inventory_hostname }}.lalux.local"
    ipaclient_mkhomedir: yes
    ipaservers: lu714.linux.lalux.local
    ipaclient_force: yes
    state: present

  tasks:
  - name: set bash as default shell
    lineinfile:
      line: "{{ item }}"
      path: /etc/sssd/sssd.conf
      insertbefore: 'sssd'
      state: present
    loop:
      - "default_shell = /bin/bash"
      - "override_shell = /bin/bash"
  - name: restart sssd
    service:
            name: sssd
            state: restarted

###################### ENSURE CORRECT RIGHTS OF /HOME AFTER IDM 
 
  - name: ensure correcty possitioned access rights on /home
    file:
      path: /home/lalux.local
      state: directory
      owner: root
      group: root
      mode: 0711


#################### RSYSLOG
  - name: rsyslog config 
    copy:
      src: /opt/infrastructure/linux/files/rsyslog.conf 
      dest: /etc/rsyslog.conf 
      owner: root 
      group: root 
    notify: restart_rsyslog 
    

########### MONITORING: SETUP NODE_EXPORTER SERVICE

  - name: ensure gtar command exists
    yum:
        name: tar
        state: present
        disablerepo: '*'
        enablerepo: rhel-8-for-x86_64-appstream-rpms,rhel-8-for-x86_64-baseos-rpms
  - name: copy and extract node_exporter on the target
    unarchive:
      src: "{{ nd_exp_pkg }}"
      dest: /opt/
  - name: copy the binary to /usr/local/bin
    copy:
      src: /opt/node_exporter-1.3.1.linux-amd64/node_exporter
      dest: /usr/local/bin/
      remote_src: yes
      mode: 0755
  - name: create a basic service
    copy:
      src: "{{ nd_svc_file }}"
      dest: /etc/systemd/system/
    notify: load_config_change
  - name: open required ports
    firewalld:
      port: 9100/tcp
      permanent: true
      immediate: yes
      state: enabled
    ignore_errors: true                                           #par le fait que le firewall nest pas active sur tous les hosts
  - name: register to insights 
    command: insights-client --register 
  - name: remove cloud-user 
    ansible.builtin.user:
      name: cloud-user 
      state: absent 
      remove: yes
  - name: change localadmin password 
    user:
      name: localadmin 
      update_password: always 
      password: L@lux0123456789#|password_hash('sha512')

  handlers:
  - name: load_config_change
    systemd:
      name: node-exporter.service
      daemon-reload: yes
      state: restarted
      enabled: yes
  - name: restart_rsyslog
    service:
      name: rsyslog 
      state: restarted 

